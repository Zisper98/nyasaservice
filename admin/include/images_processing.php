<?php
// Job Lister Free Version - https://www.netartmedia.net/job-lister
// A software product of NetArt Media, All Rights Reserved
// The following source codes are obfuscated / made difficult to edit. 
// When upgrading to Job Lister PRO, you get the full non-obfuscated source codes 
// and also extra features - please find details on:
// https://www.netartmedia.net/job-lister#pro
// Find out more PHP scripts and ready-made website systems on:
// https://www.netartmedia.net/products
?><?php if(!defined('IN_SCRIPT')) die(""); if(isset($_POST["list_images"])&&$_POST["list_images"]!="") { $dkhncw=explode(",",$_POST["list_images"]); for($i=0;$i<sizeof($dkhncw);++$i) { $mkoe="uploads/".$dkhncw[$i]; if(!file_exists($mkoe)) continue; $chox = getimagesize($mkoe); $ohvtr = pathinfo($mkoe, PATHINFO_EXTENSION); $omwb="image/jpg"; if(strtolower($ohvtr)=="gif") $omwb="image/gif"; else if(strtolower($ohvtr)=="png") $omwb="image/png"; $epprfqs[]=array ( 'name' =>$mkoe, 'type' => "", 'tmp_name'=>$mkoe, 'mime' => $omwb, 'size' => getimagesize($mkoe) ); } } else if(isset($_FILES) && isset($_FILES[isset($dycp)?$dycp:"images"])) { $epprfqs=array(); $tqhmh=$_FILES[isset($dycp)?$dycp:"images"]; if(is_array($tqhmh['name'])) { for($i=0;$i<count($tqhmh['name']);++$i) { if(trim($tqhmh['name'][$i])==""||trim($tqhmh['tmp_name'][$i])=="") continue; $chox = getimagesize($tqhmh['tmp_name'][$i]); $xecdtbs = $chox['mime']; if (substr($xecdtbs, 0, 6) != 'image/') continue; $epprfqs[]=array ( 'name' =>$tqhmh['name'][$i], 'type' => $tqhmh['type'][$i], 'tmp_name'=>$tqhmh['tmp_name'][$i], 'mime' => $xecdtbs, 'size' => $tqhmh['size'][$i] ); } }else $epprfqs[]=$tqhmh; } if(isset($epprfqs)) { $ifpymq = true; foreach ($epprfqs as $file) { if(trim($file['tmp_name'])=="") continue; $pkqdj=rand(200,100000000); $kyobdad = (isset($okpudwt)?$okpudwt:"")."uploaded_images/" .$pkqdj.".jpg"; $gthvvz = $file['tmp_name']; if($gthvvz == "") continue; list($xnedbe, $yxzuuz) = getimagesize($gthvvz) ; if(!isset($legc)) $legc=900; if($xnedbe < $legc) { $xyrap = $xnedbe; } else { $xyrap = $legc; } $lppw = $xyrap / $xnedbe; $uowlqge = $yxzuuz * $lppw; $tn = imagecreatetruecolor($xyrap, $uowlqge) ; $omwb = ""; if(isset($file['mime'])&&trim($file['mime'])!="") { $omwb = $file['mime']; } if(isset($file['type'])&&trim($file['type'])!="") { $omwb = $file['type']; } switch ($omwb) { case 'image/gif': $qwgdad = 'ImageCreateFromGif'; $fihepi = 'ImagePng'; $xecdtbs = 'image/png'; break; case 'image/x-png': case 'image/png': $qwgdad = 'ImageCreateFromPng'; $fihepi = 'ImagePng'; break; default: $qwgdad = 'ImageCreateFromJpeg'; $fihepi = 'ImageJpeg'; break; } $image = $qwgdad($gthvvz); if(!isset($bbhkhm)) $bbhkhm=95; imagecopyresampled($tn, $image, 0, 0, 0, 0, $xyrap, $uowlqge, $xnedbe, $yxzuuz) ; imagejpeg($tn, $kyobdad, $bbhkhm) ; if($xnedbe < 400) { $ytzffbq = $xnedbe; } else { $ytzffbq = 400; } $kvat = $ytzffbq / $xnedbe; $hnkb = $yxzuuz * $kvat; $bkeyn = imagecreatetruecolor($ytzffbq, $hnkb) ; imagecopyresampled($bkeyn, $image, 0, 0, 0, 0, $ytzffbq, $hnkb, $xnedbe, $yxzuuz) ; imagejpeg($bkeyn, (isset($okpudwt)?$okpudwt:"")."thumbnails/" .$pkqdj.".jpg", $bbhkhm) ; if($wvft!="") { $wvft.=","; } $wvft.=$pkqdj; $ifpymq = false; } } if(isset($_POST["list_images"])&&trim($_POST["list_images"])!="") { $dkhncw=explode(",",$_POST["list_images"]); for($i=0;$i<sizeof($dkhncw);++$i) { $mkoe="uploads/".$dkhncw[$i]; if(!file_exists($mkoe)) continue; unlink($mkoe); } } ?>